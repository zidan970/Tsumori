openapi: 3.0.0
info:
  title: My Task App
  description: API Documentation for My Task App
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /users/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  nama:
                    type: string
  /users:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: OK
    get:
      summary: Get user profile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCore'
    put:
      summary: Update user profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: OK
    delete:
      summary: Delete user profile
      responses:
        '200':
          description: OK
  /projects:
    post:
      summary: Create a new project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      responses:
        '200':
          description: OK
    get:
      summary: Get all projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCore'
  /projects/{projectid}:
    get:
      summary: Get project details
      parameters:
        - name: projectid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCore'
    put:
      summary: Update project
      parameters:
        - name: projectid
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      responses:
        '200':
          description: OK
    delete:
      summary: Delete project
      parameters:
        - name: projectid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
  /tasks:
    post:
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
      responses:
        '200':
          description: OK
  /tasks/{taskid}:
    delete:
      summary: Delete task
      parameters:
        - name: taskid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
    put:
      summary: Update task
      parameters:
        - name: taskid
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
      responses:
        '200':
          description: OK
components:
  schemas:
    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    ProjectRequest:
      type: object
      properties:
        name:
          type: string
        user_id:
          type: integer
    ProjectCore:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        user_id:
          type: integer
        user:
          $ref: '#/components/schemas/UserCore'
    TaskRequest:
      type: object
      properties:
        name:
          type: string
        project_id:
          type: integer
        status:
          type: string
    TaskCore:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        project_id:
          type: integer
        status:
          type: string
        project:
          $ref: '#/components/schemas/ProjectCore'
    UserRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        address:
          type: string
        phone:
          type: string
        password:
          type: string
    UserCore:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        address:
          type: string
        phone:
          type: string